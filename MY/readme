begin at 2016-12-1 0:00

--1-- two sum
// 刚刚做完了第一题 Two Sum 虽然easy到爆了但是在阅读英文题目的过程中还是很开心的，还看了解释，我个人使用的是暴力破解，复杂度肯定喳喳了，

//先把vector拷贝到一个n＊2的矩阵，复杂度N，空间复杂度N，第二维是记录index 
//然后快速排序NlogN，复杂度，然后左右逼近，复杂度N 
//从左开始如果最小的加最大的小于target，就继续从左移动，如果大于tatget，就从右移动，如果等于target，还是左移。

--2-- Add Two Numbers 
（1） 第一次做的我用的脑残的嗯两个list想加，但是木有考虑到list长度不一样,后来又加上了如果截止了咋整的方法。 其中学到了很多啦，比如carry是英文进位，我每次next先用carry初始化，然后记录最后一位前一个，判断下最后一个是不是0，决定保存不。 嘻嘻嘻。熟悉了list操作和赋值 是否重复指定。
（2） 学长教了我法二，先都转化为十进制，想加，再十进制解码大雾，他说用了傅里叶变换的启发？？！！分别变换！！？？ （并没有写） 
（3） 写了个根据答案启发版本的 （4） 至于答案，依旧如此精彩，我终于补完了心得，一会去改github 并加上md@杨炫越 感谢提醒


--3--Longest Substring Without Repeating Characters
第三题 我当然再一次智障地使用了贪心算法（Brute Force）（其实也不算是啦，我的效率也可以，一跳也是很快的，是收到了KMP的启发）sigh，
这个题目第一次run code一次通过让我欣喜了一下，但是，我竟然忘了考虑如果s是空的话，应该如何做这种蠢事sigh，
答案使用了很棒的一个判断是否是唯一的子函数，应该学习差分这种写法呀嘻嘻，答案给的用的hashset的写法 还有两个改进版本，大家可以看看哦

--5--longestPalindrome
我个人是再次使用了算是动态规划么？复杂度是O（n^2）其实和解法4、5都有关系，也有动态 也有中心点的思考
不过写的最终很漂亮的是一个空字符串的substr(0,0),也是空哦，这样就避免了有趣的如果输入为空，为一个等等吧，
leetcode题解pdf果然给的是hash
http://articles.leetcode.com/longest-palindromic-substring-part-ii/ 这个神算法也是让人惊呆了，
